<tool id="plot_tools_astro_tool" name="Plot Tools" version="0.0.1+galaxy0" profile="23.0">
  <requirements>
    <requirement type="package" version="1.2.36">oda-api</requirement>
    <requirement type="package" version="3.9.4">matplotlib</requirement>
    <requirement type="package" version="6.1.4">astropy</requirement>
    <requirement type="package" version="1.3">gammapy</requirement>
    <requirement type="package" version="2.2.3">pandas</requirement>
  </requirements>
  <command detect_errors="exit_code">python '$__tool_directory__/${_data_product._selector}.py'</command>
  <configfiles>
    <inputs name="inputs" filename="inputs.json" data_style="paths" />
  </configfiles>
  <environment_variables>
    <environment_variable name="BASEDIR">$__tool_directory__</environment_variable>
    <environment_variable name="GALAXY_TOOL_DIR">$__tool_directory__</environment_variable>
  </environment_variables>
  <inputs>
    <conditional name="_data_product">
      <param name="_selector" type="select" label="Data Product">
        <option value="spectrum" selected="true">spectrum</option>
        <option value="sky_plot" selected="false">sky_plot</option>
        <option value="light_curve" selected="false">light_curve</option>
      </param>
      <when value="spectrum">
        <param name="fn" type="data" label="fn" format="data" />
        <param name="sep" type="select" label="sep">
          <option value="auto">auto</option>
          <option value="comma">comma</option>
          <option value="semicolon">semicolon</option>
          <option value="tab">tab</option>
          <option value="whitespace" selected="true">whitespace</option>
        </param>
        <param name="column" type="text" value="c0" label="column" />
        <param name="weights" type="text" value="c1" label="weights" />
        <param name="binning" type="select" label="binning">
          <option value="linear">linear</option>
          <option value="logarithmic" selected="true">logarithmic</option>
        </param>
        <param name="minval" type="float" value="10000000000.0" label="minval" />
        <param name="maxval" type="float" value="10000000000000.0" label="maxval" />
        <param name="nbins" type="integer" value="15" label="nbins" />
        <param name="xlabel" type="text" value="Energy, [eV]" label="xlabel" />
        <param name="ylabel" type="text" value="Flux E^2, [eV]" label="ylabel" />
        <param name="spec_power" type="float" value="2.0" label="spec_power" />
      </when>
      <when value="sky_plot">
        <param name="ra_col" type="integer" value="0" label="ra_col" />
        <param name="dec_col" type="integer" value="1" label="dec_col" />
        <param name="weight_col" type="integer" value="2" label="weight_col" />
        <param name="data_file" type="data" label="data_file" format="data" />
        <param name="binsz" type="float" value="0.02" label="binsz" />
        <param name="window_size_RA" type="float" value="2.0" label="window_size_RA" />
        <param name="window_size_DEC" type="float" value="2.0" label="window_size_DEC" />
        <param name="skiprows" type="integer" value="0" label="skiprows" />
      </when>
      <when value="light_curve">
        <param name="fn" type="data" label="fn" format="data" />
        <param name="sep" type="select" label="sep">
          <option value="comma">comma</option>
          <option value="semicolon">semicolon</option>
          <option value="space">space</option>
          <option value="tab">tab</option>
          <option value="whitespace" selected="true">whitespace</option>
        </param>
        <param name="column" type="text" value="c5" label="column" />
        <param name="weights_column" type="text" value="" label="weights_column" />
        <param name="binning" type="select" label="binning">
          <option value="linear">linear</option>
          <option value="logarithmic" selected="true">logarithmic</option>
        </param>
        <param name="minval" type="float" value="0" label="minval" />
        <param name="maxval" type="float" value="0" label="maxval" />
        <param name="use_quantile_values" type="boolean" label="use_quantile_values" />
        <param name="nbins" type="integer" value="15" label="nbins" />
        <param name="xlabel" type="text" value="time, s" label="xlabel" />
        <param name="ylabel" type="text" value="Ncounts" label="ylabel" />
      </when>
    </conditional>
  </inputs>
  <outputs>
    <data label="${tool.name} -&gt; spectrum histogram_data" name="out_spectrum_histogram_data" format="auto" from_work_dir="histogram_data_galaxy.output">
      <filter>_data_product['_selector'] == 'spectrum'</filter>
    </data>
    <data label="${tool.name} -&gt; spectrum histogram_picture" name="out_spectrum_histogram_picture" format="auto" from_work_dir="histogram_picture_galaxy.output">
      <filter>_data_product['_selector'] == 'spectrum'</filter>
    </data>
    <data label="${tool.name} -&gt; sky_plot plot" name="out_sky_plot_plot" format="auto" from_work_dir="plot_galaxy.output">
      <filter>_data_product['_selector'] == 'sky_plot'</filter>
    </data>
    <data label="${tool.name} -&gt; sky_plot fits_image" name="out_sky_plot_fits_image" format="auto" from_work_dir="fits_image_galaxy.output">
      <filter>_data_product['_selector'] == 'sky_plot'</filter>
    </data>
    <data label="${tool.name} -&gt; light_curve histogram_data" name="out_light_curve_histogram_data" format="auto" from_work_dir="histogram_data_galaxy.output">
      <filter>_data_product['_selector'] == 'light_curve'</filter>
    </data>
    <data label="${tool.name} -&gt; light_curve histogram_picture" name="out_light_curve_histogram_picture" format="auto" from_work_dir="histogram_picture_galaxy.output">
      <filter>_data_product['_selector'] == 'light_curve'</filter>
    </data>
  </outputs>
  <tests>
    <test expect_num_outputs="2">
      <conditional name="_data_product">
        <param name="_selector" value="spectrum" />
        <param name="fn" value="fn.json" />
        <param name="sep" value="whitespace" />
        <param name="column" value="c0" />
        <param name="weights" value="c1" />
        <param name="binning" value="logarithmic" />
        <param name="minval" value="10000000000.0" />
        <param name="maxval" value="10000000000000.0" />
        <param name="nbins" value="15" />
        <param name="xlabel" value="Energy, [eV]" />
        <param name="ylabel" value="Flux E^2, [eV]" />
        <param name="spec_power" value="2.0" />
      </conditional>
      <assert_stdout>
        <has_text text="*** Job finished successfully ***" />
      </assert_stdout>
    </test>
    <test expect_num_outputs="2">
      <conditional name="_data_product">
        <param name="_selector" value="sky_plot" />
        <param name="ra_col" value="0" />
        <param name="dec_col" value="1" />
        <param name="weight_col" value="2" />
        <param name="data_file" value="data_file.json" />
        <param name="binsz" value="0.02" />
        <param name="window_size_RA" value="2.0" />
        <param name="window_size_DEC" value="2.0" />
        <param name="skiprows" value="0" />
      </conditional>
      <assert_stdout>
        <has_text text="*** Job finished successfully ***" />
      </assert_stdout>
    </test>
    <test expect_num_outputs="2">
      <conditional name="_data_product">
        <param name="_selector" value="light_curve" />
        <param name="fn" value="fn.json" />
        <param name="sep" value="whitespace" />
        <param name="column" value="c5" />
        <param name="weights_column" value="" />
        <param name="binning" value="logarithmic" />
        <param name="minval" value="0" />
        <param name="maxval" value="0" />
        <param name="use_quantile_values" value="False" />
        <param name="nbins" value="15" />
        <param name="xlabel" value="time, s" />
        <param name="ylabel" value="Ncounts" />
      </conditional>
      <assert_stdout>
        <has_text text="*** Job finished successfully ***" />
      </assert_stdout>
    </test>
  </tests>
  <help>Plot Tools
==========

Set of tools for astronomical data visualization

- sky_plot - visualize sky map using set of events as input
- light_cure - calculate and visualize light curve from a set of evebts
- spectrum - calculate energy spectrum using set of events as input
</help>
  <citations>
    <citation type="bibtex">@misc{label,
			title = {Tool repository},
			url = {https://renkulab.io/projects/astronomy/mmoda/plot-tools},
			author = {Oleg Kalashev},
			year = {2024},
			note = {}
		}</citation>
  </citations>
</tool>