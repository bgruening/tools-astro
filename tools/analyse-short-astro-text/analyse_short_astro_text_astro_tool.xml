<tool id="analyse_short_astro_text_astro_tool" name="analyse-short-astro-text" version="0.0.1+galaxy0" profile="24.0">
  <requirements>
    <requirement type="package" version="0.4.10">astroquery</requirement>
    <requirement type="package" version="2.2.3">pandas</requirement>
    <requirement type="package" version="7.1.4">rdflib</requirement>
    <requirement type="package" version="4.13.4">beautifulsoup4</requirement>
    <requirement type="package" version="2.0.0">sparqlwrapper</requirement>
    <requirement type="package" version="3.4.2">networkx</requirement>
    <requirement type="package" version="3.10.1">matplotlib</requirement>
    <requirement type="package" version="1.26.4">numpy</requirement>
    <requirement type="package" version="1.15.2">scipy</requirement>
    <requirement type="package" version="6.1.6">astropy</requirement>
    <requirement type="package" version="2.6.0">pytorch-cpu</requirement>
    <requirement type="package" version="0.33.0">accelerate</requirement>
    <requirement type="package" version="4.43.2">transformers</requirement>
    <requirement type="package" version="1.2.28">oda-api</requirement>
    <requirement type="package" version="2.2.0">fake-useragent</requirement>
    <!--Requirements string 'nb2workflow' can't be converted automatically. Please add the galaxy/conda requirement manually or modify the requirements file!-->
  </requirements>
  <command detect_errors="exit_code">python '$__tool_directory__/extract_data_predict_workflow.py'</command>
  <environment_variables>
    <environment_variable name="BASEDIR">$__tool_directory__</environment_variable>
    <environment_variable name="GALAXY_TOOL_DIR">$__tool_directory__</environment_variable>
  </environment_variables>
  <configfiles>
    <inputs name="inputs" filename="inputs.json" data_style="paths" />
  </configfiles>
  <inputs>
    <param name="text" type="text" value="" label="text" optional="false" />
    <param name="number" type="integer" value="16672" label="number" optional="false" />
  </inputs>
  <outputs>
    <data label="${tool.name} -&gt; extract_data_predict_workflow table_telescopes" name="out_extract_data_predict_workflow_table_telescopes" format="auto" from_work_dir="table_telescopes_galaxy.output" />
    <data label="${tool.name} -&gt; extract_data_predict_workflow table_sources" name="out_extract_data_predict_workflow_table_sources" format="auto" from_work_dir="table_sources_galaxy.output" />
    <data label="${tool.name} -&gt; extract_data_predict_workflow table_source_positions" name="out_extract_data_predict_workflow_table_source_positions" format="auto" from_work_dir="table_source_positions_galaxy.output" />
    <data label="${tool.name} -&gt; extract_data_predict_workflow table_unknown_sources" name="out_extract_data_predict_workflow_table_unknown_sources" format="auto" from_work_dir="table_unknown_sources_galaxy.output" />
    <data label="${tool.name} -&gt; extract_data_predict_workflow table_source_classes" name="out_extract_data_predict_workflow_table_source_classes" format="auto" from_work_dir="table_source_classes_galaxy.output" />
    <data label="${tool.name} -&gt; extract_data_predict_workflow table_astrobert_results" name="out_extract_data_predict_workflow_table_astrobert_results" format="auto" from_work_dir="table_astrobert_results_galaxy.output" />
    <data label="${tool.name} -&gt; extract_data_predict_workflow table_vectorized_text" name="out_extract_data_predict_workflow_table_vectorized_text" format="auto" from_work_dir="table_vectorized_text_galaxy.output" />
    <data label="${tool.name} -&gt; extract_data_predict_workflow table_vectorized_url" name="out_extract_data_predict_workflow_table_vectorized_url" format="auto" from_work_dir="table_vectorized_url_galaxy.output" />
    <data label="${tool.name} -&gt; extract_data_predict_workflow table_vectorized_url_scores" name="out_extract_data_predict_workflow_table_vectorized_url_scores" format="auto" from_work_dir="table_vectorized_url_scores_galaxy.output" />
  </outputs>
  <tests>
    <test expect_num_outputs="9">
      <param name="text" value="" />
      <param name="number" value="16672" />
      <assert_stdout>
        <has_text text="*** Job finished successfully ***" />
      </assert_stdout>
    </test>
  </tests>
  <help>And here, the help text for the galaxy tool goes.
</help>
</tool>